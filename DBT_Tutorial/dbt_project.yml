
# Name your package! Package names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'VBI_Training'
version: '1.0'

# This setting configures which "profile" dbt uses for this project. Profiles contain
# database connection information, and should be configured in the  ~/.dbt/profiles.yml file
profile: 'vbi_training'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that source models can be found
# in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"] 
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

# You can define configurations for models in the `source-paths` directory here.
# Using these configurations, you can enable or disable models, change how they
# are materialized, and more!

# In this example config, we tell dbt to build all models in the example/ directory
# as views (the default). These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
snapshots:
  VBI_Training:
    transient: false
    post-hook: "grant select on {{ this }} to SYSADMIN"
models:
  VBI_Training:

    tags: "training"
      # Applies to all files under models/example/
    Level_1_How_To_Create_Models:
        materialized: view
    Level_2_How_To_Create_Models_Using_Macros:
        materialized: view
    Level_3_How_to_use_Jinja_statements:
        materialized: view
        vars:
            my_model_variable : 'Model Variable'
    Level_4_How_to_use_Seeds_Hooks_tags:
        materialized: view
        tags: ["events", "hourly"]
    Level_5_How_to_use_sources:
        materialized: view
    Level_6_Snapshot_and_Materializations:
        materialized: view
    Level_7_Testing:
        materialized: view
        
    vars:
        my_global_variable : 'Global Variable'
  
  vars:
    my_package_variable: 'Package Variable'     

on-run-start:
    #  - "{{ callProcedure() }}"
     - "{{ printFlags() }}"
    #  - "{{ jsonConversions() }}"
    #  - "{{ UsingStatements() }}"
# on-run-start:
#     - "create  table if not exists DBT_WORKSHOP_BATCH_1.RAMEES.audit_table(event_name text,event_timestamp timestamp,event_schema text,event_model text)"
# on-run-end:
#     - "{{log('success',True)}}"


seeds:
  VBI_Training:
    enabled: true
    schema: RAMEES
    quote_columns: False
    # This configures data/country.csv
    Country:
    
      # Override column types
      column_types:
        Country_Code: varchar(10)
        Country: varchar(32)